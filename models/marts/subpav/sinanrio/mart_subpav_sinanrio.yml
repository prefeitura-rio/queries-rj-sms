version: 2

models:
  - name: mart_subpav_sinanrio__familias
    alias: familias_contatos
    tags: [subpav, sinanrio, familias]
    description: |
      Base para busca rápida de coabitantes/“família” por CPF/CNS.
      Regras principais:
        • Exclusão de óbito; apenas prontuários com 13/14 dígitos e CNES/CPF válidos.
        • Deduplicação por CPF usando o registro mais recente por `recency_ts`
          = COALESCE(source_updated_at, data_ultima_atualizacao_cadastral, data_atualizacao_vinculo_equipe).
        • `family_key` = prefixo do número do prontuário removendo os 2 últimos dígitos (ID_pessoa)
          + ':' + CNES. Isso funciona para ESF (AP+AREA+MICRO+FAM+PESSOA) e para Modelo B
          (CNES+incremental), reduzindo colisões ao incluir o CNES.
        • Particionamento por `family_bucket` (hash de `family_key`) e cluster por `cpf_int`, `family_key_fp`
          para lookup/fetch via BigQuery.
      ```
    columns:
      - name: family_key
        description: "Chave textual da família: prefixo do prontuário (sem os 2 últimos dígitos) + ':' + CNES."
        tests:
          - not_null
      - name: family_key_fp
        description: "Fingerprint INT64 de `family_key` (usado para filtros/joins eficientes)."
        tests:
          - not_null
      - name: family_bucket
        description: "Partição de `family_key`: MOD(ABS(FARM_FINGERPRINT(family_key)), 2048)."
        tests:
          - not_null
      - name: cpf_int
        description: "CPF numérico (INT64) após dedup por recency."
        tests:
          - not_null
          - unique
      - name: cnes
        description: "CNES vigente no registro mais recente (não nulo pela regra de pré-filtro)."
        tests:
          - not_null
      - name: ine
        description: "INE vigente."
      - name: cpf
        description: "CPF em string, como recebido do PEP (para exibição)."
      - name: cns
        description: "CNS em string."
      - name: nome
        description: "Nome do paciente."
      - name: dt_nascimento
        description: "Data de nascimento (DATE)."
      - name: id_sexo
        description: "Sexo padronizado (macro): 1=M, 2=F, 3=Ignorado."
        tests:
          - accepted_values:
              values: [1, 2, 3]
              quote: false
      - name: id_raca_cor
        description: "Raça/cor padronizada (macro): 1=Branca, 2=Preta, 3=Parda, 4=Amarela, 5=Indígena, 9=Ignorado."
        tests:
          - accepted_values:
              values: [1, 2, 3, 4, 5, 9]
              quote: false
      - name: telefone
        description: "Telefone conforme PEP."
      - name: cep
        description: "CEP do endereço."
      - name: logradouro
        description: "Tipo + logradouro (concat)."
      - name: numero
        description: "Número do endereço."
      - name: complemento
        description: "Complemento do endereço."
      - name: id_bairro
        description: "ID do bairro (join por nome normalizado com `plataforma_subpav.principal__bairros`). Pode ser nulo."

  - name: mart_subpav_sinanrio__sintomaticos_respiratorios
    alias: sintomaticos_respiratorios_dia
    tags: [subpav, sinanrio, sintomaticos]
    description: |
      Extração diária de atendimentos com suspeita/queixa respiratória (sintomáticos),
      limitada a episódios com `data_particao = ontem` e filtrada por lista de CIDs
      respiratórios (macro `sinanrio_lista_cids_sintomaticos()`).
      Enriquecimento com cadastro do paciente (CNS, contato, endereço, mapeamento de bairro),
      e definição de preferências:
        • CNES final: estabelecimento do atendimento > CNES do cadastro
        • INE final: equipe do atendimento (quando disponível no profissional) > INE do cadastro
      Regras:
        • `nao_municipe`: 0 se (cidade nula) OU cidade = "RIO DE JANEIRO"; senão 1.
        • `id_tb_situacao`: fixo em 1 (Flag SUBPAV : Quando migrado de outras fontes).
        • Dedupl. por CPF do dia: mantém o último atendimento (maior `saida_datahora`).
    columns:
      - name: cpf
        description: "CPF do paciente (string, sem máscara). Um por CPF ao dia."
        tests:
          - not_null
          - unique
      - name: cns
        description: "CNS priorizado (15 dígitos válidos quando disponível)."
      - name: nome
        description: "Nome do paciente."
      - name: dt_nascimento
        description: "Data de nascimento (DATE)."
      - name: id_raca_cor
        description: "Raça/cor padronizada."
      - name: id_sexo
        description: "Sexo padronizado."
      - name: id_escolaridade
        description: "Escolaridade (reservado; atualmente NULL)."
      - name: telefone
        description: "Telefone mais prioritário do cadastro."
      - name: cep
        description: "CEP do endereço do cadastro."
      - name: logradouro
        description: "Tipo + logradouro (concat normalizada)."
      - name: numero
        description: "Número do endereço (string)."
      - name: complemento
        description: "Complemento do endereço."
      - name: id_bairro
        description: "ID do bairro (join por nome normalizado)."
      - name: cidade
        description: "Cidade do endereço (texto do cadastro)."
      - name: cnes
        description: "CNES final do atendimento."
      - name: ine
        description: "INE final da equipe (quando houver)."
      - name: nao_municipe
        description: "Flag 0/1 conforme regra de cidade."
      - name: n_prontuario
        description: "Número do prontuário (do cadastro)."
      - name: cnes_cadastrante
        description: "CNES do estabelecimento do profissional que lançou o atendimento."
      - name: cpf_cadastrante
        description: "CPF do profissional (quando informado)."
      - name: cns_cadastrante
        description: "CNS do profissional (quando informado)."
      - name: id_tb_situacao
        description: "Situação do caso TB no SINANRIO (fixo 1: Quando migrado de outras fontes)."
      - name: origem
        description: "Fornecedor do prontuário no episódio (origem do dado)."

  - name: mart_subpav_sinanrio__resultado_exame
    alias: resultado_exame
    tags: [subpav, sinanrio, exames]
    description: |
      Mart de resultados de exames do GAL, consolidando:
        • Fonte: `rj-sms.brutos_gal.exames_laboratoriais`
        • Escopo: PCR GeneXpert MTB/RIF (`tugexp-pcrtr`) e Baciloscopia Ziehl-Neelsen (`tubb-colzn`)
      Normalizações:
        • `paciente_cpf`: extrai CPF dos campos de documento e mantém apenas dígitos
        • `paciente_cns`: somente dígitos
        • `codigo_amostra`: TRIM (vazio → NULL)
        • `cnes`: primeiro não vazio entre solicitante → notificação SINAN → lab execução → lab responsável → lab cadastro
        • `dt_resultado`: primeira data válida entre `data_liberacao`, `data_processamento`,
          `data_inicio_processamento`, `data_recebimento`, `data_solicitacao`
        • `id_tipo_exame`: 1 = PCR (tugexp-pcrtr); 2 = Ziehl (tubb-colzn)
      Classificação (`id_resultado`):
        • PCR (`dna_para_complexo_mycobacterium_tuberculosis` + `rifampicina`):
          - “Não Detectado” → 3
          - “Não Testado” → 5
          - “Inconclusivo”/“Indeterminado” → 4
          - “Detectado traços” → 4
          - “Detectado” → usar `rifampicina`:
            ▸ “Resistente” → 2
            ▸ “Sensivel”/“Suscetivel”/“Indeterminado”/vazio → 1
        • Ziehl (`resultado`):
          - “Ausência de B.A.A.R. …” → 2
          - “Positiva … +++” → 1
          - “Positiva … ++” → 5
          - “Positiva … +” → 4
          - “Encontrado(s) N B.A.A.R.” (N ≥ 1) → 4
          - “Positiva …” sem “+” → 4
      Deduplicação:
        • Chave natural por dia/tipo: (`paciente_cns`, `id_tipo_exame`, `dt_resultado`)
        • Mantém o último registro por `loaded_at` (mais recente)
      Filtros finais:
        • `dt_resultado`, `id_tipo_exame`, `id_resultado` não nulos
        • `paciente_cns` com 15 dígitos
    columns:
      - name: codigo_amostra
        description: "Código da amostra do GAL (TRIM)."
      - name: paciente_cpf
        description: "CPF numérico (quando informado nos documentos do paciente)."
      - name: paciente_cns
        description: "CNS (15 dígitos)."
      - name: cnes
        description: "CNES consolidado pela ordem de preferência (solicitante → notificação → execução → responsável → cadastro)."
      - name: id_tipo_exame
        description: "Tipo do exame: 1=PCR (GeneXpert), 2=Ziehl (Baciloscopia)."
      - name: id_resultado
        description: "Classificação do resultado conforme regras de mapeamento SUBPAV (1 a 5)."
      - name: dt_resultado
        description: "Data do resultado consolidada a partir dos campos de data do GAL."
