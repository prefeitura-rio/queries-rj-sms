version: 2

models:
  - name: mart_subpav_sinanrio__familias
    alias: sinanrio__familias
    tags: [subpav, sinanrio, familias]
    description: |
      Base para busca rápida de coabitantes/“família” por CPF/CNS.
      Regras principais:
        • Exclusão de óbito; apenas prontuários com 13/14 dígitos e CNES/CPF válidos.
        • Deduplicação por CPF usando o registro mais recente por `recency_ts`
          = COALESCE(source_updated_at, data_ultima_atualizacao_cadastral, data_atualizacao_vinculo_equipe).
        • `family_key` = prefixo do número do prontuário removendo os 2 últimos dígitos (ID_pessoa)
          + ':' + CNES. Isso funciona para ESF (AP+AREA+MICRO+FAM+PESSOA) e para Modelo B
          (CNES+incremental), reduzindo colisões ao incluir o CNES.
        • Particionamento por `family_bucket` (hash de `family_key`) e cluster por `cpf_int`, `family_key_fp`
          para lookup/fetch via BigQuery.
      ```
    columns:
      - name: family_key
        description: "Chave textual da família: prefixo do prontuário (sem os 2 últimos dígitos) + ':' + CNES."
        tests:
          - not_null
      - name: family_key_fp
        description: "Fingerprint INT64 de `family_key` (usado para filtros/joins eficientes)."
        tests:
          - not_null
      - name: family_bucket
        description: "Partição de `family_key`: MOD(ABS(FARM_FINGERPRINT(family_key)), 2048)."
        tests:
          - not_null
      - name: cpf_int
        description: "CPF numérico (INT64) após dedup por recency."
        tests:
          - not_null
          - unique
      - name: cnes
        description: "CNES vigente no registro mais recente (não nulo pela regra de pré-filtro)."
        tests:
          - not_null
      - name: ine
        description: "INE vigente."
      - name: cpf
        description: "CPF em string, como recebido do PEP (para exibição)."
      - name: cns
        description: "CNS em string."
      - name: nome
        description: "Nome do paciente."
      - name: dt_nascimento
        description: "Data de nascimento (DATE)."
      - name: id_sexo
        description: "Sexo padronizado (macro): 1=M, 2=F, 3=Ignorado."
        tests:
          - accepted_values:
              values: [1, 2, 3]
              quote: false
      - name: id_raca_cor
        description: "Raça/cor padronizada (macro): 1=Branca, 2=Preta, 3=Parda, 4=Amarela, 5=Indígena, 9=Ignorado."
        tests:
          - accepted_values:
              values: [1, 2, 3, 4, 5, 9]
              quote: false
      - name: telefone
        description: "Telefone conforme PEP."
      - name: cep
        description: "CEP do endereço."
      - name: logradouro
        description: "Tipo + logradouro (concat)."
      - name: numero
        description: "Número do endereço."
      - name: complemento
        description: "Complemento do endereço."
      - name: id_bairro
        description: "ID do bairro (join por nome normalizado com `plataforma_subpav.principal__bairros`). Pode ser nulo."

  - name: mart_subpav_sinanrio__sintomaticos_respiratorios
    alias: sintomaticos_respiratorios_dia
    tags: [subpav, sinanrio, sintomaticos]
    description: |
      Extração diária de atendimentos com suspeita/queixa respiratória (sintomáticos),
      limitada a episódios com `data_particao = ontem` e filtrada por lista de CIDs
      respiratórios (macro `sinanrio_lista_cids_sintomaticos()`).
      Enriquecimento com cadastro do paciente (CNS, contato, endereço, mapeamento de bairro),
      e definição de preferências:
        • CNES final: estabelecimento do atendimento > CNES do cadastro
        • INE final: equipe do atendimento (quando disponível no profissional) > INE do cadastro
      Regras:
        • `nao_municipe`: 0 se (cidade nula) OU cidade = "RIO DE JANEIRO"; senão 1.
        • `id_tb_situacao`: fixo em 1 (Flag SUBPAV : Quando migrado de outras fontes).
        • Dedupl. por CPF do dia: mantém o último atendimento (maior `saida_datahora`).
    columns:
      - name: cpf
        description: "CPF do paciente (string, sem máscara). Um por CPF ao dia."
        tests:
          - not_null
          - unique
      - name: cns
        description: "CNS priorizado (15 dígitos válidos quando disponível)."
      - name: nome
        description: "Nome do paciente."
      - name: dt_nascimento
        description: "Data de nascimento (DATE)."
      - name: id_raca_cor
        description: "Raça/cor padronizada."
      - name: id_sexo
        description: "Sexo padronizado."
      - name: id_escolaridade
        description: "Escolaridade (reservado; atualmente NULL)."
      - name: telefone
        description: "Telefone mais prioritário do cadastro."
      - name: cep
        description: "CEP do endereço do cadastro."
      - name: logradouro
        description: "Tipo + logradouro (concat normalizada)."
      - name: numero
        description: "Número do endereço (string)."
      - name: complemento
        description: "Complemento do endereço."
      - name: id_bairro
        description: "ID do bairro (join por nome normalizado)."
      - name: cidade
        description: "Cidade do endereço (texto do cadastro)."
      - name: cnes
        description: "CNES final do atendimento."
      - name: ine
        description: "INE final da equipe (quando houver)."
      - name: nao_municipe
        description: "Flag 0/1 conforme regra de cidade."
      - name: n_prontuario
        description: "Número do prontuário (do cadastro)."
      - name: cnes_cadastrante
        description: "CNES do estabelecimento do profissional que lançou o atendimento."
      - name: cpf_cadastrante
        description: "CPF do profissional (quando informado)."
      - name: cns_cadastrante
        description: "CNS do profissional (quando informado)."
      - name: id_tb_situacao
        description: "Situação do caso TB no SINANRIO (fixo 1: Quando migrado de outras fontes)."
      - name: origem
        description: "Fornecedor do prontuário no episódio (origem do dado)."
