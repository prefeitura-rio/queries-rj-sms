{{
    config(
        schema="brutos_prontuario_carioca_saude_mental",
        alias="pacientes",
        materialized="table",
        tags=["raw", "pcsm"],
        description="Pacientes que já obtiveram atendimento em um Centro de Atenção Psicosocial (CAPS) ou dentro da RAPS (Rede de atenção Psicosocial). Esta tabela tem informações complementares na tabela gh_paciente_sm."
    )
}} 

select
    safe_cast(cp.seqpac as int64) as id_paciente,
    safe_cast(cp.nuprontpapel as string) as numero_prontuario_papel,
    safe_cast(cp.dscnomepac as string) as nome_paciente,
    safe_cast(cp.dscnomsoci as string) as nome_social_paciente,
    safe_cast(cp.apelido as string) as apelido_paciente,
    safe_cast(cp.racacor as string) as raca_cor_paciente,
    safe_cast(cp.datnascim as date) as data_nascimento_paciente,
    safe_cast(cp.dscnmmae as string) as nome_mae_paciente,
    safe_cast(cp.dscnmpai as string) as nome_pai_paciente,
    safe_cast(cp.indsexo as string) as sexo_paciente,
    safe_cast(cp.indgenero as string) as genero_paciente,
    safe_cast(cp.sigufnasc as string) as sigla_uf_nascimento,
    safe_cast(cp.muninasc as string) as municipio_nascimento,
    safe_cast(cp.nacional as string) as nacionalidade_paciente,
    safe_cast(cp.paisorigem as string) as pais_origem_paciente,
    safe_cast(cp.dsctelef1 as string) as telefone1_paciente,
    safe_cast(cp.dsctelef2 as string) as telefone2_paciente,
    safe_cast(cp.dscemail as string) as email_paciente,
    safe_cast(cp.numrg as string) as numero_registro_civil,
    safe_cast(cp.indorgaoexp as string) as tipo_registro_civil,
    safe_cast(cp.datexpedi as date) as data_expedicao_registro,
    safe_cast(cp.ufexpedi as string) as sigla_uf_registro,
    safe_cast(cp.numcpfpac as string) as numero_cpf_paciente,
    safe_cast(cp.dsccns as string) as numero_cartao_saude,
    safe_cast(cp.estcivil as string) as estado_civil_paciente,
    safe_cast(cp.numcepender as string) as numero_cep_paciente,
    safe_cast(cp.dslogradouro as string) as logradouro_paciente,
    safe_cast(cp.dscbairroender as string) as bairro_paciente,
    safe_cast(cp.sigufender as string) as sigla_uf_endereco,
    safe_cast(cp.muniend as string) as municipio_endereco,
    safe_cast(cp.numend as string) as numero_endereco,
    safe_cast(cp.complend as string) as complemento_endereco,
    safe_cast(cp.pontorefe as string) as ponto_referencia_endereco,
    safe_cast(cp.dscfoto as string) as endereco_arquivo_foto_paciente,
    safe_cast(cp.indstatus as string) as status_acompanhamento,
    safe_cast(cp.sequsref as int64) as id_unidade_atencao_primaria_referencia,
    safe_cast(cp.sequscapref as int64) as id_unidade_caps_referencia,
    safe_cast(cp.seqlogin as int64) as id_usuario_registrou_paciente,
    safe_cast(cp.datcadast as date) as data_cadastro_paciente,
    safe_cast(cp.seqprofequirefer1 as int64) as id_primeiro_profissional_referencia,
    safe_cast(cp.seqprofequirefer2 as int64) as id_segundo_profissional_referencia,
    safe_cast(cp.sequsambref as int64) as id_unidade_ambulatorial_referencia,
    safe_cast(cp.dscnotif as string) as notificacao_sistema,
    safe_cast(cp.indorigcad as string) as origem_cadastro,
    safe_cast(cp.condestr as string) as status_paciente_nao_brasileiro,
    safe_cast(cp.dscmodatendativ as string) as ciclo_atendimento_aberto,
    safe_cast(cp.seqprofrefdamb1 as int64) as id_primeiro_profissional_deambulatorial,
    safe_cast(cp.seqprofrefdamb2 as int64) as id_segundo_profissional_deambulatorial,
    safe_cast(cp.seqequipfm as int64) as id_equipe_clinica_familia,
    safe_cast(p_sm.indcobert as string) as moradia_coberta_saude_familia,
    safe_cast(p_sm.indcadesf as string) as cadastrado_saude_familia,
    safe_cast(p_sm.indsitfam as string) as situacao_familiar,
    safe_cast(p_sm.indmoradi as string) as tipo_moradia,
    safe_cast(p_sm.localmora as string) as local_moradia, 
    safe_cast(p_sm.horariomora as string) as horario_moradia,
    safe_cast(p_sm.obsmora as string) as obs_situacao_rua, 
    safe_cast(p_sm.ocupaend as string) as endereco_ocupacao,
    safe_cast(p_sm.ocupatel as string) as telefone_trabalho, 
    safe_cast(p_sm.subnmresp as string) as responsavel_paciente,
    safe_cast(p_sm.subtelresp as string) as telefone_responsavel,
    safe_cast(p_sm.subgrauparent as string) as parentesco_responsavel,
    safe_cast(p_sm.indtrab as string) as paciente_trabalhando,
    safe_cast(p_sm.nmprofi as string) as profissao_paciente,
    safe_cast(p_sm.indescolari as string) as escolaridade_paciente,
    safe_cast(p_sm.indfreqescol as string) as frequenta_escola,
    safe_cast(p_sm.indserie as string) as serie_cursando,
    safe_cast(p_sm.indrecbenef as string) as recebe_beneficio,
    safe_cast(p_sm.indqualbenef as string) as qual_beneficio,
    safe_cast(p_sm.indcuratela as string) as possui_curador,
    safe_cast(p_sm.indtipcuratela as string) as tipo_curador,
    safe_cast(p_sm.nmcurador as string) as nome_curador,
    safe_cast(p_sm.telcurador as string) as telefone_curador,
    safe_cast(p_sm.indpresdefi as string) as possui_deficiencia,
    safe_cast(p_sm.indtpdefi as string) as tipo_deficiencia,
    safe_cast(p_sm.datobito as date) as data_obito_paciente,
    safe_cast(p_sm.indtpobito as date) as tipo_obito_paciente,
    safe_cast(p_sm.indtpcausaex as string) as tipo_causa_externa_obito,
    safe_cast(p_sm.nminstitu as string) as instituicao_ensino,
    safe_cast(p_sm.tpclasse as string) as classe_instituicao_ensino,
    safe_cast(p_sm.statobsv	as string) as status_alta_transferencia,
    safe_cast(p_sm.morafamacoend as string) as endereco_familia_acolhedora,
    safe_cast(p_sm.morainstnome as string) as instituicao_psico_social,
    safe_cast(p_sm.morainstdtini as date) as data_entrada_instituicao,
    safe_cast(p_sm.morainstdtsai as date) as data_saida_instituicao,
    safe_cast(p_sm.indpacinst as string) as paciente_institucionalizado,
    safe_cast(p_sm.sequsinst as int64) as id_instituicao,
    safe_cast(p_sm.equipesf as string) as equipe_saude_familia,
    safe_cast(p_sm.codcid10 as string) as codigo_cid10_primario,
    safe_cast(p_sm.codciap2 as string) as codigo_ciap2_primaria,
    safe_cast(p_sm.datcodcid10 as date) as data_inicio_cid10_primario,
    safe_cast(p_sm.datcodciap2 as date) as data_inicio_ciap2_primario,
    safe_cast(p_sm.indmediador as string) as mediador_ensino,
    safe_cast(p_sm.indrecur as string) as sala_recurso,
    safe_cast(p_sm.codorigem as int64) as id_origem_paciente,
    safe_cast(p_sm.datorigempac as date) as data_origem_paciente,
    safe_cast(p_sm.dschistpront as string) as historico_prontuario,
    safe_cast(p_sm.indtratjudicial as string) as tratamento_judicial,
    safe_cast(p_sm.dsctrabasempres as string) as empresa_trabalho_assistido,
    safe_cast(p_sm.dsctrabasperiod as string) as data_inicio_trabalho_assistido,
    safe_cast(p_sm.seqequipedeamb as int64) as id_equipe_deambulatorio,
    safe_cast(p_sm.codcid10sec as string) as codigo_cid10_secundario,
    safe_cast(p_sm.datcodcid10sec as date) as data_cid10_secundario,
    safe_cast(p_sm.datinffreqesc as date) as data_frequencia_escola,
    safe_cast(p_sm.dscnaofreqesc as string) as descricao_nao_frequencia_escola,
    safe_cast(p_sm.dscinfadic as string) as contatos_adicionais,
    safe_cast(p_sm.dsctipovinc as string) as vinculo_trabalho_paciente,
    safe_cast(p_sm.dscocupform as string) as ocupacao_formal,
    safe_cast(p_sm.nomempresform as string) as empresa_vinculo_formal,
    safe_cast(p_sm.dscsperiodiniform as string) as inicio_vinculo_formal,
    safe_cast(p_sm.indpcdform as string) as ocupacao_pessoa_deficiente,
    safe_cast(p_sm.dsclocalinform as string) as local_ocupacao_informal,
    safe_cast(p_sm.dscsperiodiniinform as string) as inicio_trabalho_informal,
    safe_cast(p_sm.dscocupassist as string) as local_trabalho_assistido,
    safe_cast(p_sm.dscenderassist as string) as endereco_trabalho_assistido,
    safe_cast(p_sm.dsctelassist as string) as telefone_trabalho_assistido,
    safe_cast(p_sm.indpcdassist as string) as trabalho_pessoa_deficiente,
    safe_cast(p_sm.indreinsassist as string) as reinsercao_assistido
from {{ source('brutos_prontuario_carioca_saude_mental_staging', 'gh_cidadao_pac') }} cp
inner join {{ source('brutos_prontuario_carioca_saude_mental_staging', 'gh_pacientes_sm') }} p_sm on p_sm.seqpacsm = cp.seqpac